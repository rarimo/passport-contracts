import { ethers } from "ethers";

const proof = {
  pi_a: [
    "11641511700264701409947919017092752906936812172209671637935898315554278858615",
    "3422428250043586680995492740068152733068034372584701754090657207183705520653",
    "1",
  ],
  pi_b: [
    [
      "5327994629837200175014173705183062138328429480876909477747326886171161256533",
      "7773027392751233909992854214565411827495158178814667614273184597801571134850",
    ],
    [
      "13072558427731977928981665592073946225005965855046676947707279522410497967763",
      "548235358261859079542287097706835905310911700688593118600101183735935970471",
    ],
    ["1", "0"],
  ],
  pi_c: [
    "1038062513333299724871442046166607826915872458084505963135090901842581607505",
    "4625543802338457595450741687538326923968711347278668144801487791393059046242",
    "1",
  ],
  protocol: "groth16",
  curve: "bn128",
};

const signals = [
  "15806704627620783043448169214838786348395809330456140685459045233186516590845",
  "3712306165694248214385194579475333295919240820223985992665662850478906412973",
  "9290220886378932972498520598582272207830794067114841867403064943116135823879",
  "6786666445844329342342852725978826877478009852305919669426605363201062681551",
];

const PublicKey = {
  X: "0xa5872d67a2c964f3dfc978a344fa73e3312cc0adf63fadc195c11488ae4d9030",
  Y: "0x174b62444891be5231a57d7e82e59613ee20391e72a1154d7303b2354a1b2c70",
};

const convertProofToHex = () => {
  const pi_a = proof.pi_a.map((x) => ethers.toBeHex(x, 32));
  const pi_b = proof.pi_b.map((x) => x.map((y) => ethers.toBeHex(y, 32)));
  const pi_c = proof.pi_c.map((x) => ethers.toBeHex(x, 32));
  return {
    pi_a,
    pi_b,
    pi_c,
  };
};

const convertSignalsToHex = () => {
  return signals.map((x) => ethers.toBeHex(x, 32));
};

const convertPublicKeyToHex = () => {
  return `${ethers.toBeHex(PublicKey.X)}${ethers.toBeHex(PublicKey.Y).replace("0x", "")}`;
};

// console.log(convertProofToHex());
// console.log(convertSignalsToHex());
// console.log(convertPublicKeyToHex());
